
question link ---  https://leetcode.com/problems/combine-two-tables/description/

Query 1

select p.firstName, p.lastName, a.city, a.state
from Person as p 
left join Address as a
on p.personId = a.personId;

question link --- https://leetcode.com/problems/customers-who-never-order/description/

Query 2

select name Customers from Customers
left join Orders
on Customers.id = Orders.CustomerId
where Orders.CustomerId is null;



question link --- https://leetcode.com/problems/game-play-analysis-i/

Query 3

Select distinct player_id, min(event_date) first_login from Activity
Group by player_id ;


question link --- https://leetcode.com/problems/duplicate-emails/

Query 4
select email from Person
group by email >1
having count(email)>1;

question link --- https://leetcode.com/problems/article-views-i/

Query 5
select DISTINCT author_id as id from Views
where author_id = viewer_id
order by author_id;

question link --- https://leetcode.com/problems/find-customer-referee/

Query 6
select name from Customer
where referee_id <> 2 or referee_id is null;

question link --- https://leetcode.com/problems/employees-with-missing-information/description/

Query 7
select e.employee_id from employees e  left join salaries s on e.employee_id=s.employee_id where s.salary is null
union 
select s.employee_id from salaries s  left join employees e on e.employee_id=s.employee_id where e.name is null
order by employee_id;

question link --- https://leetcode.com/problems/employees-earning-more-than-their-managers/

Query 8
select e1.name Employee from Employee as e1, employee as e2
where e1.managerId = e2.id AND e1.salary>e2.salary;


question link --- https://leetcode.com/problems/patients-with-a-condition/description/

Query 9
select * from Patients 
where conditions like "DIAB1%" or conditions like '% DIAB1%';


question link --- https://leetcode.com/problems/big-countries/description/?envType=study-plan&id=sql-i

Query 10
SELECT name, population, area from World
where area >= 3000000 or population >= 25000000;


question link --- https://leetcode.com/problems/recyclable-and-low-fat-products/?envType=study-plan&id=sql-i

Query 11
select product_id from Products 
where low_fats = 'Y' and recyclable = 'Y';


question link --- https://leetcode.com/problems/find-customer-referee/submissions/905366760/?envType=study-plan&id=sql-i

Query 12
select name from Customer
where referee_id <> 2 or referee_id is null;


question link --- https://leetcode.com/problems/customers-who-never-order/submissions/905372657/?envType=study-plan&id=sql-i

Query 13
select c.name Customers from Customers as c
left join Orders as o
on c.id = customerId
where o.customerId is null



question link ---https://leetcode.com/problems/calculate-special-bonus/description/?envType=study-plan&id=sql-i

Query 14
select employee_id, (if(name like "M%" or employee_id%2=0 , 0, salary)) as bonus from Employees
order by employee_id


question link ---https://leetcode.com/problems/delete-duplicate-emails/submissions/905995950/?envType=study-plan&id=sql-i

Query 15
select employee_id, (if(name like "M%" or employee_id%2=0 , 0, salary)) as bonus from Employees
delete p1 from Person as p1, Person p2
where p1.email = p2.email AND p1.id>p2.id


question link --- https://leetcode.com/problems/swap-salary/submissions/906003951/?envType=study-plan&id=sql-i

Query 16
update Salary
set sex = (if (sex = 'f', 'm','f'));


question link --- https://leetcode.com/problems/fix-names-in-a-table/description/?envType=study-plan&id=sql-i

Query 17
SELECT user_id,
 CONCAT(upper(substring(name,1,1)),LOWER(substring(name,2)))
as name
from Users 
ORDER BY user_id



question link --- https://leetcode.com/problems/group-sold-products-by-the-date/submissions/906335146/?envType=study-plan&id=sql-i

Query 18
select sell_date,
 COUNT(DISTINCT(product)) as num_sold,
 group_concat(distinct product order by product asc separator ',')
 as products
 from Activities
 group by sell_date
 order by sell_date


question link --- https://leetcode.com/problems/employees-with-missing-information/description/?envType=study-plan&id=sql-i

Query 19
select e.employee_id from employees as e  left join salaries as s on e.employee_id=s.employee_id where s.salary is null
union 
select s.employee_id from salaries as s  left join employees as e on e.employee_id=s.employee_id where e.name is null
order by employee_id;

question link --- https://leetcode.com/problems/rearrange-products-table/?envType=study-plan&id=sql-i

Query 20
select product_id, 'store1' as store, store1 as price 
from Products where store1 is not null
union
select product_id, 'store2' as store, store2 as price 
from Products where store2 is not null
union
select product_id, 'store3' as store, store3 as price 
from Products where store3 is not null;



question link --- https://leetcode.com/problems/article-views-i/submissions/907756520/?envType=study-plan&id=sql-i

Query 21
select DISTINCT author_id as id from Views
where author_id = viewer_id
order by author_id



question link --- https://leetcode.com/problems/second-highest-salary/description/?envType=study-plan&id=sql-i

Query 22
select max(salary) as SecondHighestSalary from Employee
where salary < (select Max(salary) from Employee)

question link ---https://leetcode.com/problems/tree-node/description/?envType=study-plan&id=sql-i

Query 23

select id, (case 
when p_id is null then "Root"
when id in (select p_id from Tree) THEN "Inner"
else "Leaf"
end
) as type
from Tree


question link --- 

Query 24

